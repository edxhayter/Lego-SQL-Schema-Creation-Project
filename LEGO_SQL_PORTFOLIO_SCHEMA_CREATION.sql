CREATE SCHEMA TIL_PORTFOLIO_PROJECTS.ED_HAYTER;

-- Check column character length, for varchar() length
SELECT MAX(LENGTH(part_num))
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_PARTS;

// Make the Table Structure for the staging tables (In Snowflake you can copy and paste the definitions of existing staging tables in the database pane)
CREATE TABLE LEGO_COLORS (
	ID NUMBER(38,0),
	NAME VARCHAR(28),
	RGB VARCHAR(6),
	IS_TRANS VARCHAR(1)
);

CREATE TABLE LEGO_INVENTORIES(
    ID NUMBER(38,0),
	VERSION NUMBER(38,0),
	SET_NUM VARCHAR(16)
);

CREATE TABLE LEGO_INVENTORY_PARTS (
    INVENTORY_ID NUMBER(38,0),
	PART_NUM VARCHAR(15),
	COLOR_ID NUMBER(38,0),
	QUANTITY NUMBER(38,0),
	IS_SPARE VARCHAR(1)
);

CREATE OR REPLACE TABLE LEGO_INVENTORY_SETS (
	INVENTORY_ID NUMBER(38,0),
	SET_NUM VARCHAR(16),
	QUANTITY NUMBER(38,0)
);

CREATE TABLE LEGO_PARTS (
    PART_NUM VARCHAR(15),
	NAME VARCHAR(233),
	PART_CAT_ID NUMBER(38,0)
);

CREATE TABLE LEGO_PART_CATEGORIES (
    ID NUMBER(38,0),
	NAME VARCHAR(44)
);

CREATE TABLE LEGO_SETS (
    SET_NUM VARCHAR(16),
	NAME VARCHAR(95),
	YEAR NUMBER(38,0),
	THEME_ID NUMBER(38,0),
	NUM_PARTS NUMBER(38,0)
);

CREATE TABLE LEGO_THEMES (
    ID NUMBER(38,0),
	NAME VARCHAR(32),
	PARENT_ID NUMBER(38,0)
);

// Insert the Staging Data into the Tables
INSERT INTO LEGO_COLORS (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_COLORS
);

INSERT INTO LEGO_INVENTORIES (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_INVENTORIES
);

INSERT INTO LEGO_INVENTORY_PARTS (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_INVENTORY_PARTS
);

INSERT INTO LEGO_INVENTORY_SETS (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_INVENTORY_SETS
);

INSERT INTO LEGO_PARTS (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_PARTS
);

INSERT INTO LEGO_PART_CATEGORIES (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_PART_CATEGORIES
);

INSERT INTO LEGO_SETS (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_SETS
);

INSERT INTO LEGO_THEMES (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_THEMES
);

// Set Primary and Foreign Keys for Each Table

--Set a primary key:
ALTER TABLE LEGO_COLORS ADD PRIMARY KEY (id);
ALTER TABLE LEGO_PARTS ADD PRIMARY KEY (part_num);
ALTER TABLE LEGO_INVENTORIES ADD PRIMARY KEY (id);
ALTER TABLE LEGO_SETS ADD PRIMARY KEY (SET_NUM);
ALTER TABLE LEGO_THEMES ADD PRIMARY KEY (id);
ALTER TABLE LEGO_PART_CATEGORIES ADD PRIMARY KEY (id);

--Set a foreign key:
ALTER TABLE LEGO_INVENTORY_PARTS ADD FOREIGN KEY (INVENTORY_ID) REFERENCES LEGO_INVENTORIES(id);

ALTER TABLE LEGO_INVENTORY_PARTS ADD FOREIGN KEY (part_num) REFERENCES LEGO_PARTS(part_num);

ALTER TABLE LEGO_INVENTORY_PARTS ADD FOREIGN KEY (COLOR_ID) REFERENCES LEGO_COLORS(id);

ALTER TABLE LEGO_INVENTORY_SETS ADD FOREIGN KEY (INVENTORY_ID) REFERENCES LEGO_INVENTORIES(id);

ALTER TABLE LEGO_INVENTORY_SETS ADD FOREIGN KEY (SET_NUM) REFERENCES LEGO_SETS(SET_NUM);

ALTER TABLE LEGO_SETS ADD FOREIGN KEY (THEME_ID) REFERENCES LEGO_THEMES(id);

ALTER TABLE LEGO_INVENTORIES ADD FOREIGN KEY (SET_NUM) REFERENCES LEGO_SETS(SET_NUM);

ALTER TABLE LEGO_INVENTORY_PARTS ADD FOREIGN KEY (INVENTORY_ID) REFERENCES LEGO_INVENTORIES(id);

ALTER TABLE LEGO_PARTS ADD FOREIGN KEY (PART_CAT_ID) REFERENCES LEGO_PART_CATEGORIES(id);
